version: "3"
services:
  subtitle-service:
    build:
      context: ./subtitle-service
      dockerfile: Dockerfile
    environment:
      PORT: 8070
      API_TRANSLATE: "http://translation-service:8100"
      REDIS_URL: redis
    ports:
      - 8070:8070
    command: npm run start
  translation-service:
    build:
      context: ./translation-service
      dockerfile: Dockerfile
    depends_on:
      - mysql-db
    restart: always
    environment:
      PORT: 8100
      DB_DIALECT: mysql
      DB_HOST: mysql-db
      DB_PORT: 3306
      DB_DATABASE: translation
      DB_USERNAME: user
      DB_PASSWORD: password
    ports:
      - 8100:8100
    command: bash -c "./wait-for-it.sh mysql-db:3306 && npm run start"
  email-service:
    build:
      context: ./email-service
      dockerfile: Dockerfile
    depends_on:
      - mailserver
    environment:
      REDIS_URL: redis
      MAILSERVER_HOST: mailserver
      MAILSERVER_PORT: 1025
    ports:
      - 8090:8090
    command: npm run start
  redis:
    image: redis:alpine
  mailserver:
    image: mailhog/mailhog:latest
    logging:
      driver: none
    ports:
      - 1025:1025
      - 8025:8025
  mysql-db:
    image: mysql:8.0.24
    restart: always
    environment:
      MYSQL_DATABASE: translation
      MYSQL_USER: user
      MYSQL_PASSWORD: password
      MYSQL_ROOT_PASSWORD: my-secret-pw
    logging:
      driver: none
    ports:
      - 3306:3306
    expose:
      - 3306
    volumes:
      - mysql-db-data:/var/lib/mysql-db
    healthcheck:
      test:
        [
          "CMD",
          "mysqladmin",
          "ping",
          "-h",
          "localhost",
          "-u",
          "root",
          "-p$$MYSQL_ROOT_PASSWORD",
        ]
      interval: 2s
      timeout: 20s
      retries: 10
  nginx:
    image: nginx:1.20.0
    ports:
      - 8080:8080
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    logging:
      driver: none
    depends_on:
      - email-service
      - subtitle-service
      - translation-service
volumes:
  mysql-db-data:
