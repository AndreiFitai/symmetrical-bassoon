version: "3"
services:
  subtitle-service:
    build:
      context: ./subtitle-service
      dockerfile: Dockerfile
    environment:
      PORT: 8070
      API_TRANSLATE: "http://translation-service:8100"
      REDIS_URL: redis
    ports:
      - 8070:8070
    volumes:
      - ./subtitle-service:/usr/src/app
    command: npm run dev
  translation-service:
    build:
      context: ./translation-service
      dockerfile: Dockerfile
    depends_on:
      - mysql
    environment:
      PORT: 8100
      DB_DIALECT: mysql
      DB_HOST: mysql
      DB_PORT: 3306
      DB_DATABASE: translation
      DB_USER: user
      DB_PASSWORD: password
    ports:
      - 8100:8100
    volumes:
      - ./translation-service:/usr/src/app
      command:
        [
          "./wait-for-it.sh",
          "mysql:3306",
          "--",
          "npm",
          "run",
          "migrate",
          "&&",
          "npm",
          "run",
          "dev",
        ]
  email-service:
    build:
      context: ./email-service
      dockerfile: Dockerfile
    depends_on:
      - mailserver
    environment:
      REDIS_URL: redis
      MAILSERVER_HOST: mailserver
      MAILSERVER_PORT: 1025
    ports:
      - 8090:8090
    volumes:
      - ./email-service:/usr/src/app
    command: npm run dev
  redis:
    image: redis:alpine
  mailserver:
    image: mailhog/mailhog:latest
    logging:
      driver: none # disable chatty logs
    ports:
      - 1025:1025
      - 8025:8025
  mysql:
    image: mysql:latest
    restart: always
    environment:
      MYSQL_DATABASE: translation
      MYSQL_USER: user
      MYSQL_PASSWORD: password
      MYSQL_ROOT_PASSWORD: my-secret-pw
    ports:
      - 3306:3306
    expose:
      - 3306
    volumes:
      - mysql_data:/var/lib/mysql
  # experimental
  # nginx:
  #   image: nginx
  #   ports:
  #     - "8080:8080"
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/nginx.conf:ro

volumes:
  mysql_data:
